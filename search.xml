<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一次电赛经历</title>
      <link href="/2024/08/06/The%20first%20e-race%20experience/"/>
      <url>/2024/08/06/The%20first%20e-race%20experience/</url>
      
        <content type="html"><![CDATA[<h2 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h2><p>这是我第一次参加全国大学生电子设计竞赛（24年是省赛年），通过这一次的经历我对参赛的流程有了些许的了解，总算不是当初那个小白了。</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li>关注教务处的比赛通知和官网的通知，因为这是第一年所以（以yc学院为例）会进行院队面试（虽然参加面试的人都过了）</li><li>然后等接到通知以后，就是根据所选的题目进行准备，最好是比通知的比赛时间早一个月去准备（具体准备的流程下面会提到）</li><li>准备好之后就是等待比赛开始了，正式比赛的时间是四天三夜，强度很大。第一天早上7-8点会在官网上发出题目，所以前一天晚上尽量不要熬夜。比赛第一天起来选择自己赛道的相应赛题。</li><li>比赛临近结束要进行装箱（把作品在相关老师的监督下封起来，统一保存），在规定时间内前往指定地点提交作品，相关老师会和志愿者一起封箱并贴上封条，然后统一保存，千万不能错过提交的时间。</li><li>等待测评，一般是结束后的第二天，第三天这样，所以必须要至少一个人去完成测评，测评是有专门的老师拿着测评表（有时候会和发出的题目有些许出入），测评完之后就等待一到两天，等待成绩出来。（差点没得到奖，拿了个省三）。</li></ol><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>分为两个方面来记录，但并不是完全分离的（这次完全是靠大佬软硬都通被带飞的）</p><h3 id="硬件（以电源组为例）"><a href="#硬件（以电源组为例）" class="headerlink" title="硬件（以电源组为例）"></a>硬件（以电源组为例）</h3><p>因为我是电源组（有点幽默了）</p><ol><li>首先要知道电源组所涉及到的知识点，先了解大概赛题的分类，再去学习各个类的拓扑和原理。<ul><li>这里提醒一点就是，电赛是竞赛不是专业的设计项目交出产品，更注重的是知识的理解和实践，比如说斩波电路设计到的傅里叶分析，仅仅知道傅里叶变换后的结果和其会产生谐波（要求滤掉）就足够了。</li><li>在一点，理论和实际会有差异，有时候输出的结果和理论值并不是一模一样，所以要通过理论上手实际调试，理论也很重要，理论的重要性是体现在指导意义上的。</li></ul></li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> e-race </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my first blog</title>
      <link href="/2024/08/04/my-first-blog/"/>
      <url>/2024/08/04/my-first-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="这是我的第一篇博客"><a href="#这是我的第一篇博客" class="headerlink" title="这是我的第一篇博客"></a>这是我的第一篇博客</h1><pre><code>以下内容来自大神的转载，链接:https://github.com/walter201230/Python</code></pre><h2 id="不知道免费不"><a href="#不知道免费不" class="headerlink" title="不知道免费不"></a>不知道免费不</h2><h1 id="一、List（列表）"><a href="#一、List（列表）" class="headerlink" title="一、List（列表）"></a>一、List（列表）</h1><h2 id="1、什么是-List-（列表）"><a href="#1、什么是-List-（列表）" class="headerlink" title="1、什么是 List （列表）"></a>1、什么是 List （列表）</h2><p>List （列表）是 Python 内置的一种数据类型。 它是一种有序的集合，可以随时添加和删除其中的元素。</p><p>那为什么要有 List （列表）呢？</p><p>我们用一个例子来说明。</p><p>现在有一个团队要出去玩，要先报名。如果用我们之前学过的知识，那么就是用一个字符串变量把他们都记录起来。</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-080527.png"></p><p>但是这样太麻烦了，而且也不美观。</p><p>在编程中，一定要学会偷懒，避免「重复性工作」。如果有一百个成员，那么你及时是复制粘贴，也会把你写烦。</p><p>这时候就可以使用列表了。</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-080835.png"></p><p>就这样，一行代码就可以存放 N 多个名字了。</p><h2 id="2、怎么创建-List（列表）"><a href="#2、怎么创建-List（列表）" class="headerlink" title="2、怎么创建 List（列表）"></a>2、怎么创建 List（列表）</h2><p>从上面的例子可以分析出，列表的格式是这样的。</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-081342.png"></p><p>其实列表就是用中括号 <code>[]</code> 括起来的数据，里面的每一个数据就叫做元素。每个元素之间使用逗号分隔。</p><p>而且列表的数据元素不一定是相同的数据类型。</p><p>比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list1=[<span class="string">&#x27;两点水&#x27;</span>,<span class="string">&#x27;twowter&#x27;</span>,<span class="string">&#x27;liangdianshui&#x27;</span>,<span class="number">123</span>]</span><br></pre></td></tr></table></figure><p>这里有字符串类型，还有整数类型。</p><p>我们尝试把他打印出来，看看打印的结果是怎样的。</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-081912.png"></p><p>结果如下：</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-081951.png"></p><h2 id="3、如何访问-List（列表）中的值"><a href="#3、如何访问-List（列表）中的值" class="headerlink" title="3、如何访问 List（列表）中的值"></a>3、如何访问 List（列表）中的值</h2><p>就像一开始的例子，我们有时候不需要把全部人员的姓名都打印出来，有时候我们需要知道第 3 个报名的人是谁？前两名报名的是谁？</p><p>那么怎么从列表中取出来呢？</p><p>换种问法就是，怎么去访问列表中的值？</p><p>这时候我们可以通过列表的下标索引来访问列表中的值，同样你也可以使用方括号的形式截取字符。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = [<span class="string">&#x27;一点水&#x27;</span>, <span class="string">&#x27;两点水&#x27;</span>, <span class="string">&#x27;三点水&#x27;</span>, <span class="string">&#x27;四点水&#x27;</span>, <span class="string">&#x27;五点水&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过索引来访问列表</span></span><br><span class="line"><span class="built_in">print</span>(name[<span class="number">2</span>])</span><br><span class="line"><span class="comment"># 通过方括号的形式来截取列表中的数据</span></span><br><span class="line"><span class="built_in">print</span>(name[<span class="number">0</span>:<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>输出的结果：</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-090321.png"></p><p>可见，我们需要知道知道 <code>name</code> 这个列表中第三个报名的是谁？只需要用 <code>name[2]</code>  就可以了。</p><p>这里你会问，为什么是 2 ，不是 3 呢？</p><p>这是因为在编程世界中，都是从 0 开始的，而不是我们生活习惯中从 1 开始。</p><p>所以需要知道第三个是谁？</p><p>那就是  <code>name[2]</code>  就可以了。</p><p>从例子来看，我们还把 <code>name[0:2]</code> 的结果打印出来了。</p><p>从打印结果来看，只打印了第一，第二个元素内容。</p><p>这里可能会有疑问？</p><p>为什么不是打印前三个啊，不是说 2 就是第 3 个吗？</p><p>那是因为这是<strong>左闭右开</strong>区间的。</p><p>所以 <code>name[0:2]</code> 的意思就是从第 0 个开始取，取到第 2 个，但是不包含第 2 个。</p><p>还是那句话，为了更好的理解，可以多去尝试，多去玩编程。</p><p>所以你可以尝试下下面的各种方式：</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-091524.png"></p><p>看看输出的结果：</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-091624.png"></p><p>根据输出的结果和上面讲到的知识，就很容易理解其中的一些用法了。</p><pre><code>## 4、怎么去更新 List（列表） ##</code></pre><p>还是一开始的例子，我们用代码记录了报名人的名字，那后面可能会有新人加入，也有可能会发现一开始写错名字了，想要修改。</p><p>这时候怎么办呢？</p><p>这时候可以通过索引对列表的数据项进行修改或更新，也可以使用 append() 方法来添加列表项。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">name = [<span class="string">&#x27;一点水&#x27;</span>, <span class="string">&#x27;两点水&#x27;</span>, <span class="string">&#x27;三点水&#x27;</span>, <span class="string">&#x27;四点水&#x27;</span>, <span class="string">&#x27;五点水&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过索引对列表的数据项进行修改或更新</span></span><br><span class="line">name[<span class="number">1</span>]=<span class="string">&#x27;2点水&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 append() 方法来添加列表项</span></span><br><span class="line">name.append(<span class="string">&#x27;六点水&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><p>输出的结果：</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-092406.png"></p><h2 id="5、怎么删除-List（列表）-里面的元素"><a href="#5、怎么删除-List（列表）-里面的元素" class="headerlink" title="5、怎么删除 List（列表） 里面的元素"></a>5、怎么删除 List（列表） 里面的元素</h2><p>那既然这样，肯定会有人中途退出的。</p><p>那么我们就需要在列表中，把他的名字去掉。</p><p>这时候使用 del 语句来删除列表的的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name = [<span class="string">&#x27;一点水&#x27;</span>, <span class="string">&#x27;两点水&#x27;</span>, <span class="string">&#x27;三点水&#x27;</span>, <span class="string">&#x27;四点水&#x27;</span>, <span class="string">&#x27;五点水&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 del 语句来删除列表的的元素</span></span><br><span class="line"><span class="keyword">del</span> name[<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure><p>输出的结果:</p><p><img src="http://twowaterimage.oss-cn-beijing.aliyuncs.com/2019-08-31-092705.png"></p><p>你看输出的结果，列表中已经没有了 <code>四点水</code> 这个数据了。证明已经删除成功了。</p><h2 id="6、List（列表）运算符"><a href="#6、List（列表）运算符" class="headerlink" title="6、List（列表）运算符"></a>6、List（列表）运算符</h2><p>列表对 <code>+</code>  和 <code>*</code>  的操作符与字符串相似。<code>+</code> 号用于组合列表，<code>*</code>  号用于重复列表。</p><table><thead><tr><th>Python 表达式</th><th>结果</th><th>描述</th></tr></thead><tbody><tr><td>len([1, 2, 3])</td><td>3</td><td>计算元素个数</td></tr><tr><td>[1, 2, 3] + [4, 5, 6]</td><td>[1, 2, 3, 4, 5, 6]</td><td>组合</td></tr><tr><td>[‘Hi!’] * 4</td><td>[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td><td>复制</td></tr><tr><td>3 in [1, 2, 3]</td><td>True</td><td>元素是否存在于列表中</td></tr><tr><td>for x in [1, 2, 3]: print x,</td><td>1 2 3</td><td>迭代</td></tr></tbody></table><h2 id="7、List-（列表）函数-方法"><a href="#7、List-（列表）函数-方法" class="headerlink" title="7、List （列表）函数&amp;方法"></a>7、List （列表）函数&amp;方法</h2><table><thead><tr><th>函数&amp;方法</th><th>描述</th></tr></thead><tbody><tr><td>len(list)</td><td>列表元素个数</td></tr><tr><td>max(list)</td><td>返回列表元素最大值</td></tr><tr><td>min(list)</td><td>返回列表元素最小值</td></tr><tr><td>list(seq)</td><td>将元组转换为列表</td></tr><tr><td>list.append(obj)</td><td>在列表末尾添加新的对象</td></tr><tr><td>list.count(obj)</td><td>统计某个元素在列表中出现的次数</td></tr><tr><td>list.extend(seq)</td><td>在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td></tr><tr><td>list.index(obj)</td><td>从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td>list.insert(index, obj)</td><td>将对象插入列表</td></tr><tr><td>list.pop(obj&#x3D;list[-1])</td><td>移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr><td>list.remove(obj)</td><td>移除列表中的一个元素（参数是列表中元素），并且不返回任何值</td></tr><tr><td>list.reverse()</td><td>反向列表中元素</td></tr><tr><td>list.sort([func])</td><td>对原列表进行排序</td></tr></tbody></table><h2 id="8、实例"><a href="#8、实例" class="headerlink" title="8、实例"></a>8、实例</h2><p>最后通过一个例子来熟悉了解 List 的操作</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf-8-*-</span></span><br><span class="line"><span class="comment">#-----------------------list的使用----------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.一个产品，需要列出产品的用户，这时候就可以使用一个 list 来表示</span></span><br><span class="line">user=[<span class="string">&#x27;liangdianshui&#x27;</span>,<span class="string">&#x27;twowater&#x27;</span>,<span class="string">&#x27;两点水&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;1.产品用户&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.如果需要统计有多少个用户，这时候 len() 函数可以获的 list 里元素的个数</span></span><br><span class="line"><span class="built_in">len</span>(user)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n2.统计有多少个用户&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(user))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.此时，如果需要知道具体的用户呢？可以用过索引来访问 list 中每一个位置的元素，索引是0从开始的</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n3.查看具体的用户&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user[<span class="number">0</span>]+<span class="string">&#x27;,&#x27;</span>+user[<span class="number">1</span>]+<span class="string">&#x27;,&#x27;</span>+user[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.突然来了一个新的用户，这时我们需要在原有的 list 末尾加一个用户</span></span><br><span class="line">user.append(<span class="string">&#x27;茵茵&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n4.在末尾添加新用户&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.又新增了一个用户，可是这个用户是 VIP 级别的学生，需要放在第一位，可以通过 insert 方法插入到指定的位置</span></span><br><span class="line"><span class="comment"># 注意：插入数据的时候注意是否越界，索引不能超过 len(user)-1</span></span><br><span class="line">user.insert(<span class="number">0</span>,<span class="string">&#x27;VIP用户&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n5.指定位置添加用户&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.突然发现之前弄错了，“茵茵”就是&#x27;VIP用户&#x27;，因此，需要删除“茵茵”；pop() 删除 list 末尾的元素</span></span><br><span class="line">user.pop()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n6.删除末尾用户&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.过了一段时间，用户“liangdianshui”不玩这个产品，删除了账号</span></span><br><span class="line"><span class="comment"># 因此需要要删除指定位置的元素，用pop(i)方法，其中i是索引位置</span></span><br><span class="line">user.pop(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n7.删除指定位置的list元素&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.用户“两点水”想修改自己的昵称了</span></span><br><span class="line">user[<span class="number">2</span>]=<span class="string">&#x27;三点水&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n8.把某个元素替换成别的元素&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.单单保存用户昵称好像不够好，最好把账号也放进去</span></span><br><span class="line"><span class="comment"># 这里账号是整数类型，跟昵称的字符串类型不同，不过 list 里面的元素的数据类型是可以不同的</span></span><br><span class="line"><span class="comment"># 而且 list 元素也可以是另一个 list</span></span><br><span class="line">newUser=[[<span class="string">&#x27;VIP用户&#x27;</span>,<span class="number">11111</span>],[<span class="string">&#x27;twowater&#x27;</span>,<span class="number">22222</span>],[<span class="string">&#x27;三点水&#x27;</span>,<span class="number">33333</span>]]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n9.不同元素类型的list数据&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(newUser)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2136918-65d31cae9f8bb34d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="list的使用"></p><h1 id="so-到底免费还是收费"><a href="#so-到底免费还是收费" class="headerlink" title="so 到底免费还是收费"></a>so 到底免费还是收费</h1><ol><li>如果是有免费额度的话那我就部署在相关的平台上，例如zeabur,这里附上操作链接：<a href="https://blog.laogou717.com/2024/07/31/AI%20era/Hexo/">https://blog.laogou717.com/2024/07/31/AI%20era/Hexo/</a></li><li>不过Github Pages 用着也还好。</li><li>回到原来先试一试</li><li>现在还不知道POST（也就是要写的文章）怎么通过tags都整理到一起</li><li>在菜单上也没有加入搜索选项</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/08/04/hello-world/"/>
      <url>/2024/08/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
